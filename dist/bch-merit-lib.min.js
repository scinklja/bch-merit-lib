!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).BchMessage=t()}}((function(){return class{constructor(t={}){if(!t.wallet)throw new Error("minimal-slp-wallet instance must be passed in the config object when instantiating.");this.wallet=t.wallet,this.merit=new class{constructor(t={}){if(this.env=t.env,!t.wallet)throw new Error("Instance of minimal-slp-wallet must be passed in the config object when instantiating.");this.wallet=t.wallet,this.bchjs=t.wallet.bchjs}async getTokenUtxos(t,e,n){try{t=this.bchjs.SLP.Address.toCashAddress(t);const n=await this.wallet.getUtxos(t);let r;return"1"===this.env.VERBOSE_LOG&&console.log("getUtxos/utxos: "+JSON.stringify(n,null,2)),r=e?n.slpUtxos.type1.tokens.filter(t=>t.tokenId&&t.tokenId.includes(e)):n.bchUtxos.filter(t=>!t.tokenId)}catch(r){throw console.error("Error in merit.js/getTokenUtxos()"),r}}getTokenQuantity(t){try{let e=0;return t.map(t=>{e+=Number(t.tokenQty)}),e}catch(e){throw console.error("Error in merit.js/getTokenQuantity()"),e}}async calcMerit(t,e,n){try{if(!Array.isArray(t))throw new Error("Input hydratedUtxo must be an array");const r=this.bchjs.SLP.Address.toCashAddress(e),o=144;let s=0;"1"===this.env.MERIT_AGE&&(s=await this.bchjs.Blockchain.getBlockCount());const i=[];for(let e=0;e<t.length;e++){const a=t[e];let l,h=0;if("1"===this.env.MERIT_AGE){let t=a.height;const e=await this.getParentAge(a.tx_hash,r);e&&(t=e.height),h=(s-t)/o,h=this.bchjs.Util.floor2(h),0===a.height&&(h=0)}l=n?Number(a.tokenQty):a.value/1e8,"1"===this.env.MERIT_AGE&&(l*=h),a.age=h,a.merit=l,i.push(a)}return i}catch(r){throw console.error("Error in merit.js/getMerit()"),r}}async getParentAge(t,e){try{let n=!1;for(;t;){const r=await this.findTokenParent(t,e);t=r.tx_hash,r&&(n=r)}return n}catch(n){throw console.error("Error in merit.js/getParentAge()"),n}}async findTokenParent(t,e){try{let n=!1,r=await this.wallet.getTxData([t]);const o=(r=r[0]).tokenId,s=r.vin.map(t=>({txid:t.txid,vout:t.vout})),i=await this.wallet.getTransactions(e);for(let t=0;t<s.length;t++){const e=s[t].txid,r=i.filter(t=>t.tx_hash===e);if(r.length>0)for(let i=0;i<r.length;i++){const e=r[i],a=await this.wallet.getTxData([e.tx_hash]),l=a[0].tokenId;e.tx_pos=s[t].vout,a[0].isValidSlp&&o===l&&(n=e)}}return n}catch(n){throw console.error("Error in findTokenParent()"),n}}async agMerit(t,e,n){try{if(!t)throw new Error("an address must be specified!");const r=await this.getTokenUtxos(t,e,n);"1"===this.env.VERBOSE_LOG&&console.log("getTokenUtxos/utxos: "+JSON.stringify(r,null,2));const o=await this.calcMerit(r,t,e);let s=0;return o.map(t=>s+=t.merit),s}catch(r){throw console.error("Error in merit.js/agMerit()"),r}}}(t)}}}));