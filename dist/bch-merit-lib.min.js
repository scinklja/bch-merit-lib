!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).BchMessage=t()}}((function(){return class{constructor(t={}){if(!t.wallet)throw new Error("minimal-slp-wallet instance must be passed in the config object when instantiating.");this.wallet=t.wallet,this.merit=new class{constructor(t={}){if(console.log("test1"),console.log("test2"+this.env),this.env=t.env,console.log("config.env: "+JSON.stringify(this.env,null,2)),!t.wallet)throw new Error("Instance of minimal-slp-wallet must be passed in the config object when instantiating.");this.wallet=t.wallet,this.bchjs=t.wallet.bchjs}async getTokenUtxos(t,e,n){try{t=this.bchjs.SLP.Address.toCashAddress(t);const n=(await this.wallet.getUtxos(t)).slpUtxos.type1.tokens;let o;return o=e?n.filter(t=>t.tokenId&&t.tokenId.includes(e)):n.filter(t=>!t.tokenId)}catch(o){throw console.error("Error in merit.js/getTokenUtxos()"),o}}getTokenQuantity(t){try{let e=0;return t.map(t=>{e+=Number(t.tokenQty)}),e}catch(e){throw console.error("Error in merit.js/getTokenQuantity()"),e}}async calcMerit(t,e,n){try{if(!Array.isArray(t))throw new Error("Input hydratedUtxo must be an array");const o=this.bchjs.SLP.Address.toCashAddress(e),s=144;let r=0;1===this.env.MERIT_AGE&&(r=await this.bchjs.Blockchain.getBlockCount());const i=[];for(let e=0;e<t.length;e++){const a=t[e];let l,h=0;if(1===this.env.MERIT_AGE){let t=a.height;const e=await this.getParentAge(a.tx_hash,o);e&&(t=e.height),h=(r-t)/s,h=this.bchjs.Util.floor2(h),0===a.height&&(h=0)}l=n?Number(a.tokenQty):a.value/1e8,1===this.env.MERIT_AGE&&(l*=h),a.age=h,a.merit=l,i.push(a)}return i}catch(o){throw console.error("Error in merit.js/getMerit()"),o}}async getParentAge(t,e){try{let n=!1;for(;t;){const o=await this.findTokenParent(t,e);t=o.tx_hash,o&&(n=o)}return n}catch(n){throw console.error("Error in merit.js/getParentAge()"),n}}async findTokenParent(t,e){try{let n=!1,o=await this.wallet.getTxData([t]);const s=(o=o[0]).tokenId,r=o.vin.map(t=>({txid:t.txid,vout:t.vout})),i=await this.wallet.getTransactions(e);for(let t=0;t<r.length;t++){const e=r[t].txid,o=i.filter(t=>t.tx_hash===e);if(o.length>0)for(let i=0;i<o.length;i++){const e=o[i],a=await this.wallet.getTxData([e.tx_hash]),l=a[0].tokenId;e.tx_pos=r[t].vout,a[0].isValidSlp&&s===l&&(n=e)}}return n}catch(n){throw console.error("Error in findTokenParent()"),n}}async agMerit(t,e,n){try{if(console.log("test3"),console.log("test4"+this.env.VERBOSE_LOG),!t)throw new Error("an address must be specified!");const o=await this.getTokenUtxos(t,e,n);1===this.env.VERBOSE_LOG&&console.log("utxos: "+JSON.stringify(o,null,2));const s=await this.calcMerit(o,t,e);let r=0;return s.map(t=>r+=t.merit),r}catch(o){throw console.error("Error in merit.js/agMerit()"),o}}}(t)}}}));